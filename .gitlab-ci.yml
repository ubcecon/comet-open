
stages:
  - build
  - deploy


#python-prep:
#  stage: prep
#  image: python:latest
#  script:
#   - python --version
#   - pip install requests
#   - python setup.py $KEY $SECRET
#  when: manual
#  artifacts:
#    paths:
#      - comet-quarto

quarto-build:
  stage: build
  image: ubuntu:latest
  script:
  - apt-get update
  - apt-get -y install curl
  - apt-get -y install gpg
  - apt update
  - apt -y upgrade
  - apt-get install software-properties-common -y
  - add-apt-repository ppa:deadsnakes/ppa -y
  - apt-get update -y
  - apt-get install python3.8 -y
  - python3 -V
  - wget -qO- https://cloud.r-project.org/bin/linux/ubuntu/marutter_pubkey.asc | gpg --dearmor -o /usr/share/keyrings/r-project.gpg
  - echo "deb [signed-by=/usr/share/keyrings/r-project.gpg] https://cloud.r-project.org/bin/linux/ubuntu jammy-cran40/" | tee -a /etc/apt/sources.list.d/r-project.list
  - pip install jupyterlab 
  - apt install r-base -y # R installation
  - R -e "install.packages('IRkernel', repos = 'http://cran.us.r-project.org')" --no-save
  - R -e "IRkernel::installspec()" --no-save
  - R -e "install.packages('stargazer', repos = 'http://cran.us.r-project.org')" --no-save
  - R -e "install.packages('digest', repos = 'http://cran.us.r-project.org')" --no-save
  - R -e "install.packages('tidyverse', repos = 'http://cran.us.r-project.org')" --no-save
  - R -e "install.packages('testthat', repos = 'http://cran.us.r-project.org')" --no-save
  #- conda run R -e "update.packages(repos = 'http://cran.us.r-project.org')" --no-save
  - curl -LO https://quarto.org/download/latest/quarto-linux-amd64.deb
  - apt-get -y install gdebi-core
  - gdebi -n quarto-linux-amd64.deb
  - cd comet-quarto
  - quarto check
  - quarto render
  artifacts:
    paths:
    - comet-quarto/_site/

pages:
  stage: deploy
  image: busybox:latest
  script:
  - mv comet-quarto/_site public
  artifacts:
    paths:
    - public
  rules:
  - if: '$CI_COMMIT_BRANCH == "pages"'
  environment:
    name: production
    url: https://comet.arts.ubc.ca